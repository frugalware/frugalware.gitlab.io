<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE fsas [
<!ELEMENT fsas (fsa)*>
<!ELEMENT fsa (id , date , author?, package, vulnerable , unaffected , bts , cve , desc)>
<!-- must be an integer -->
<!ELEMENT id (#PCDATA)>
<!-- in YYYY-MM-DD format -->
<!ELEMENT date (#PCDATA)>
<!-- your nick, then the From header will be something like "nick <noreply@frugalware.org>" -->
<!ELEMENT author (#PCDATA)>
<!-- package name, without group, version, etc -->
<!ELEMENT package (#PCDATA)>
<!-- the old version -->
<!ELEMENT vulnerable (#PCDATA)>
<!-- the new (backported) version -->
<!ELEMENT unaffected (#PCDATA)>
<!-- bts url -->
<!ELEMENT bts (#PCDATA)>
<!-- cve url -->
<!ELEMENT cve (#PCDATA)>
<!-- description, can be more than one line -->
<!ELEMENT desc (#PCDATA)>
]>

<!-- If you modify this file, be sure it's still valid - read /hooks/README! -->

<fsas>
	<fsa>
		<id>637</id>
		<date>2010-03-09</date>
		<author>Miklos Vajna</author>
		<package>xar</package>
		<vulnerable>1.5.2-1</vulnerable>
		<unaffected>1.5.2-2locris1</unaffected>
		<bts>http://bugs.frugalware.org/task/4128</bts>
		<cve>http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2010-0055</cve>
		<desc>Braden Thomas from Apple has discovered a signature verification bypass issue in xar.  The issue is that xar_open assumes that the checksum is stored at offset 0, but xar_signature_copy_signed_data uses xar property "checksum/offset" to find the offset to the checksum when validating the signature.  As a result, a modified xar archive can pass signature validation by putting the checksum for the modified TOC at offset 0, pointing "checksum/offset" at the non-modified checksum at a higher offset, and using the original non-modified signature.</desc>
	</fsa>
</fsas>
