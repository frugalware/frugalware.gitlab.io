<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE fsas [
<!ELEMENT fsas (fsa)*>
<!ELEMENT fsa (id , date , author?, package, vulnerable , unaffected , bts , cve , desc)>
<!-- must be an integer -->
<!ELEMENT id (#PCDATA)>
<!-- in YYYY-MM-DD format -->
<!ELEMENT date (#PCDATA)>
<!-- your nick, then the From header will be something like "nick <noreply@frugalware.org>" -->
<!ELEMENT author (#PCDATA)>
<!-- package name, without group, version, etc -->
<!ELEMENT package (#PCDATA)>
<!-- the old version -->
<!ELEMENT vulnerable (#PCDATA)>
<!-- the new (backported) version -->
<!ELEMENT unaffected (#PCDATA)>
<!-- bts url -->
<!ELEMENT bts (#PCDATA)>
<!-- cve url -->
<!ELEMENT cve (#PCDATA)>
<!-- description, can be more than one line -->
<!ELEMENT desc (#PCDATA)>
]>

<!-- If you modify this file, be sure it's still valid - read /hooks/README! -->

<fsas>
	<fsa>
		<id>728</id>
		<date>2011-07-03</date>
		<author>Miklos Vajna</author>
		<package>wordpress</package>
		<vulnerable>3.1.3-1nexon1</vulnerable>
		<unaffected>3.1.4-1nexon1</unaffected>
		<bts>http://bugs.frugalware.org/task/4522</bts>
		<cve>No CVE, see http://wordpress.org/news/2011/06/wordpress-3-1-4/</cve>
		<desc>Multiple vulnerabilities have been reported in WordPress, which can be exploited by malicious users to bypass certain security restrictions and conduct SQL injection attacks.
			1) An unspecified error can be exploited to gain further access to the site.
			2) Input passed via the "order" and "orderby" parameters to wp-admin/link-manager.php and wp-admin/edit-tags.php is not properly sanitised in wp-includes/taxonomy.php before being used in SQL queries. This can be exploited to manipulate SQL queries by injecting arbitrary SQL code.
			Successful exploitation requires the "Editor" role.</desc>
	</fsa>
	<fsa>
		<id>727</id>
		<date>2011-07-03</date>
		<author>Miklos Vajna</author>
		<package>drupal7</package>
		<vulnerable>7.2-1nexon1</vulnerable>
		<unaffected>7.4-1nexon1</unaffected>
		<bts>http://bugs.frugalware.org/task/4521</bts>
		<cve>No CVE, see http://drupal.org/node/1204582</cve>
		<desc>A vulnerability has been reported in Drupal, which can be exploited by malicious people to bypass certain security restrictions.
			The vulnerability is caused due to the node_access system restrictions not being enforced and can be exploited to view otherwise restricted nodes.
			NOTE: This affects the taxonomy and forum subsystems.</desc>
	</fsa>
	<fsa>
		<id>726</id>
		<date>2011-06-24</date>
		<author>Miklos Vajna</author>
		<package>libreoffice</package>
		<vulnerable>3.3.0.4-3</vulnerable>
		<unaffected>3.3.3.1-1nexon1</unaffected>
		<bts>http://bugs.frugalware.org/task/4518</bts>
		<cve>No CVE, see
			http://www.kb.cert.org/vuls/id/953183</cve>
		<desc>Multiple vulnerabilities have been reported in LibreOffice, which can be exploited by malicious people to compromise a user's system.
			The vulnerabilities are caused due to errors in the import filter when processing Lotus Word Pro (LWP) files and can be exploited to cause a stack-based buffer overflow via a specially crafted file.
			Successful exploitation may allow execution of arbitrary code, but requires tricking a user into opening a malicious LWP file.</desc>
	</fsa>
	<fsa>
		<id>725</id>
		<date>2011-06-07</date>
		<author>Miklos Vajna</author>
		<package>wireshark</package>
		<vulnerable>1.4.6-1nexon1</vulnerable>
		<unaffected>1.4.7-1nexon1</unaffected>
		<bts>http://bugs.frugalware.org/task/4510</bts>
		<cve>http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2011-1956
			http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2011-1957
			http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2011-1958
			http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2011-1959
			http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2011-2174
			http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2011-2175</cve>
		<desc>Multiple vulnerabilities have been reported in Wireshark, which can be exploited by malicious people to cause a DoS (Denial of Service).
			1) An error in the DICOM dissector can be exploited to cause an infinite loop when processing certain malformed packets.
			2) An error when processing a Diameter dictionary file can be exploited to cause the process to crash.
			3) An error when processing a snoop file can be exploited to cause the process to crash.
			4) An error when processing compressed capture data can be exploited to cause the process to crash.
			5) An error when processing a Visual Networks file can be exploited to cause the process to crash.
			6) An error in the "desegment_tcp()" function (epan/dissectors/packet-tcp.c) when handling certain TCP segments can be exploited to dereference a NULL pointer and crash the process.</desc>
	</fsa>
	<fsa>
		<id>724</id>
		<date>2011-05-31</date>
		<author>Miklos Vajna</author>
		<package>freetype2</package>
		<vulnerable>2.4.2-1</vulnerable>
		<unaffected>2.4.2-2nexon1</unaffected>
		<bts>http://bugs.frugalware.org/task/4433</bts>
		<cve>http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2010-3814
			http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2010-3855</cve>
		<desc>Some vulnerabilities have been reported in FreeType, which can be exploited to cause a DoS (Denial of Service) or potentially compromise an application using the library.
			1) An error exists in the "ft_var_readpackedpoints()" function in src/truetype/ttgxvar.c when processing TrueType GX fonts and can be exploited to cause a heap-based buffer overflow via a specially crafted font.
			2) An error within the "Ins_SHZ()" function in src/truetype/ttinterp.c when handling the "SHZ" bytecode instruction can be exploited to cause a crash and potentially execute arbitrary code via a specially crafted font.</desc>
	</fsa>
	<fsa>
		<id>723</id>
		<date>2011-05-28</date>
		<author>Miklos Vajna</author>
		<package>drupal6-webform</package>
		<vulnerable>6.x_3.6-2</vulnerable>
		<unaffected>6.x_3.11-1nexon1</unaffected>
		<bts>http://bugs.frugalware.org/task/4499</bts>
		<cve>No CVE, see http://drupal.org/node/1161954.</cve>
		<desc>Justin Klein Keane has discovered multiple vulnerabilities in the Webform module for Drupal, which can be exploited by malicious users and malicious people to conduct script insertion attacks.
			1) Input passed via the "name" parameter when submitting a new webform field is not properly sanitised in sites/all/modules/webform/includes/webform.report.inc before being displayed to the user. This can be exploited to insert arbitrary HTML and script code, which will be executed in a user's browser session in context of an affected site when the malicious data is being viewed.
			Successful exploitation of this vulnerability requires the "create webform content" or "administer nodes" permission.
			2) Input passed via the filename when uploading a file through a webform is not properly sanitised in sites/all/modules/webform/components/file.inc before being displayed to the user. This can be exploited to insert arbitrary HTML and script code, which will be executed in a user's browser session in context of an affected site when the malicious data is being viewed.</desc>
	</fsa>
	<fsa>
		<id>722</id>
		<date>2011-05-28</date>
		<author>Miklos Vajna</author>
		<package>drupal7</package>
		<vulnerable>7.0-1</vulnerable>
		<unaffected>7.2-1nexon1</unaffected>
		<bts>http://bugs.frugalware.org/task/4498</bts>
		<cve>No CVE, see http://drupal.org/node/1168756</cve>
		<desc>A vulnerability and a security issue have been reported in Drupal, which can be exploited by malicious users to conduct script insertion attacks and by malicious people to bypass certain security restrictions.
			1) An error in the Color module can be exploited to conduct script insertion attacks.
			For more information see vulnerability #2 in: FSA721.
			2) A security issue in the File module (modules/file/file.module) in combination with restrictions via a node access module can be exploited to disclose private files.</desc>
	</fsa>
	<fsa>
		<id>721</id>
		<date>2011-05-28</date>
		<author>Miklos Vajna</author>
		<package>drupal6</package>
		<vulnerable>6.20-3</vulnerable>
		<unaffected>6.22-1nexon1</unaffected>
		<bts>http://bugs.frugalware.org/task/4497</bts>
		<cve>No CVE, see http://drupal.org/node/1168756</cve>
		<desc>Two vulnerabilities have been reported in Drupal, which can be exploited by malicious users to conduct script insertion attacks and by malicious people to conduct cross-site scripting attacks.
			1) Certain input passed via the URL is not properly sanitised in the Drupal error handler before being returned to the user. This can be exploited to execute arbitrary HTML and script code in a user's browser session in context of an affected site.
			Successful exploitation of this vulnerability requires that on-screen error display is enabled in admin/settings/error-reporting.
			2) Input passed via the color scheme values (e.g. "palette[bg]", "palette[text]", "palette[sideborders]", "palette[footer]", and "palette[titleslogan]") to index.php (when "q" is set to "admin/appearance/settings/bartik") when changing the color scheme is not properly sanitised before being used in a style sheet. This can be exploited to insert arbitrary CSS and script code, which will be executed in a user's browser session in context of an affected site when the malicious data is being viewed.
			Successful exploitation of this vulnerability requires the "Administer themes" privileges and the victim user is running a browser which executes certain JavaScript statements from CSS files (e.g. Internet Explorer 6).</desc>
	</fsa>
	<fsa>
		<id>720</id>
		<date>2011-05-28</date>
		<author>Miklos Vajna</author>
		<package>wordpress</package>
		<vulnerable>3.1.2-1nexon1</vulnerable>
		<unaffected>3.1.3-1nexon1</unaffected>
		<bts>http://bugs.frugalware.org/task/4496</bts>
		<cve>No CVE yet, see http://wordpress.org/news/2011/05/wordpress-3-1-3/</cve>
		<desc>neworder has discovered a vulnerability in the is_human() plugin for WordPress, which can be exploited by malicious people to compromise a vulnerable system.
			Input passed to the "type" parameter in engine.php (when e.g. "action" is set to "log-reset") is not properly verified before being used in an "eval()" function and can be exploited to inject and execute arbitrary PHP code.</desc>
	</fsa>
	<fsa>
		<id>719</id>
		<date>2011-05-16</date>
		<author>Miklos Vajna</author>
		<package>kernel</package>
		<vulnerable>2.6.37-2</vulnerable>
		<unaffected>2.6.37-3nexon1</unaffected>
		<bts>http://bugs.frugalware.org/task/4489</bts>
		<cve>http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2011-0726
			http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2011-1013
			http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2011-1019
			http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2011-1076</cve>
		<desc>Secutity issues have been reported in the Linux kernel:
		1) The start_code and end_code values in "/proc/[pid]/stat" were not protected. In certain scenarios, this flaw could be used to defeat Address Space Layout Randomization (ASLR).
		2) An integer signedness flaw in drm_modeset_ctl() could allow a local, unprivileged user to cause a denial of service or escalate their privileges.
		3) A flaw in dev_load() could allow a local user who has the CAP_NET_ADMIN capability to load arbitrary modules from "/lib/modules/", instead of only netdev modules.
		4) When a DNS resolver key is instantiated with an error indication, attempts to read that key resulted in an oops because user_read() expected there to be a payload - and there wasn't one.</desc>
	</fsa>
	<fsa>
		<id>718</id>
		<date>2011-04-29</date>
		<author>Miklos Vajna</author>
		<package>wordpress</package>
		<vulnerable>3.1.1-1nexon1</vulnerable>
		<unaffected>3.1.2-1nexon1</unaffected>
		<bts>http://bugs.frugalware.org/task/4478</bts>
		<cve>No CVE references, see http://codex.wordpress.org/Version_3.1.2</cve>
		<desc>A security issue has been reported in WordPress, which can be exploited by malicious users to bypass certain security restrictions.
			The security issue is caused due to wp-admin/press-this.php script not properly checking a user's permissions before publishing posts and can be exploited by users without the "publish_posts" permission.
			Successful exploitation requires "Contributor-level" privileges.</desc>
	</fsa>
	<fsa>
		<id>717</id>
		<date>2011-04-20</date>
		<author>Miklos Vajna</author>
		<package>wireshark</package>
		<vulnerable>1.4.4-1nexon1</vulnerable>
		<unaffected>1.4.6-1nexon1</unaffected>
		<bts>http://bugs.frugalware.org/task/4472</bts>
		<cve>http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2011-1590
			http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2011-1591</cve>
		<desc>Multiple vulnerabilities have been reported in Wireshark, which can be exploited by malicious people to cause a DoS (Denial of Service) and potentially compromise a vulnerable system.
1) A use-after-free error within the X.509if dissector can be exploited to cause a crash via specially crafted packets.
2) An error in the DECT dissector can be exploited to cause a buffer overflow via specially crafted packets.
Successful exploitation of this vulnerability may allow execution of arbitrary code.</desc>
	</fsa>
	<fsa>
		<id>716</id>
		<date>2011-04-10</date>
		<author>Miklos Vajna</author>
		<package>wordpress</package>
		<vulnerable>3.0.5-1nexon1</vulnerable>
		<unaffected>3.1.1-1nexon1</unaffected>
		<bts>http://bugs.frugalware.org/task/4464</bts>
		<cve>No CVE, see http://wordpress.org/news/2011/04/wordpress-3-1-1/</cve>
		<desc>Two vulnerabilities have been reported in WordPress, which can be exploited by malicious people to conduct cross-site scripting attacks and cause a DoS (Denial of Service).
1) Certain unspecified input is not properly sanitised before being returned to the user. This can be exploited to execute arbitrary HTML and script code in a user's browser session in context of an affected site.
2) The "make_clickable()" function in wp-includes/formatting.php does not properly check the URL length in comments before passing it to the PCRE library, which can be exploited to cause a crash.</desc>
	</fsa>
	<fsa>
		<id>715</id>
		<date>2011-04-10</date>
		<author>Miklos Vajna</author>
		<package>wireshark</package>
		<vulnerable>1.4.3-1</vulnerable>
		<unaffected>1.4.4-1nexon1</unaffected>
		<bts>http://bugs.frugalware.org/task/4443</bts>
		<cve>http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2011-0538
			http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2011-0713
			http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2011-1138
			http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2011-1139
			http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2011-1140
			http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2011-1141
			http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2011-1142
			http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2011-1143</cve>
		<desc>Multiple vulnerabilities have been reported in Wireshark, which can be exploited by malicious people to cause a DoS (Denial of Service) and potentially compromise a vulnerable system.
1) An error when processing certain pcap-ng files can be exploited to free an uninitialised pointer.
2) An error when handling certain packet lengths can be exploited to cause a crash via a specially crafted pcap-ng file.
3) An error when processing Nokia DCT3 trace files can be exploited to cause a buffer overflow via a specially crafted file.
Successful exploitation of this vulnerability may allow execution of arbitrary code.
4) An error in the "dissect_ms_compressed_string()" (SMB dissector) and "dissect_mscldap_string()" (LDAP dissector) functions can be exploited to cause a crash due to an infinite recursive function call.
5) An error when processing LDAP Filter strings can be exploited to cause a crash by consuming memory resources via large filter strings.
6) A validation error in the "dissect_6lowpan_iphc()" function (epan/dissectors/packet-6lowpan.c) in the 6LoWPAN dissector when processing certain lengths can be exploited to cause a heap-based buffer overflow of a single byte resulting in a crash.
7) A NULL pointer dereference error within the "dissect_ntlmssp_string()" function in epan/dissectors/packet-ntlmssp.c when parsing a pcap file can be exploited to cause a crash.</desc>
	</fsa>
	<fsa>
		<id>714</id>
		<date>2011-04-10</date>
		<author>Miklos Vajna</author>
		<package>wordpress</package>
		<vulnerable>3.0.4-1</vulnerable>
		<unaffected>3.0.5-1nexon1</unaffected>
		<bts>http://bugs.frugalware.org/task/4427</bts>
		<cve>http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2011-0700
			http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2011-0701</cve>
		<desc>Multiple vulnerabilities have been reported in WordPress, which can be exploited by malicious users to conduct script insertion attacks and disclose potentially sensitive information and by malicious people to conduct cross-site scripting attacks.
1) Input passed via the post title when performing a "Quick Edit" or "Bulk Edit" action and via the "post_status", "comment_status", and "ping_status" parameters is not properly sanitised before being used. This can be exploited to insert arbitrary HTML and script code, which will be executed in a user's browser session in context of an affected site when the malicious data is being viewed.
2) Certain input passed via tags in the tags meta-box is not properly sanitised before being returned to the user. This can be exploited to execute arbitrary HTML and script code in a user's browser session in context of an affected site.
Successful exploitation of these vulnerabilities requires the "Author" or "Contributor" role.
3) The application incorrectly enforces user access restrictions when accessing posts via the media uploader and can be exploited to disclose the contents of e.g. private or draft posts.
Successful exploitation of this vulnerability requires the "Author" role.</desc>
	</fsa>
	<fsa>
		<id>713</id>
		<date>2011-04-10</date>
		<author>Miklos Vajna</author>
		<package>phpmyadmin</package>
		<vulnerable>3.3.9-1</vulnerable>
		<unaffected>3.3.9.2-1nexon1</unaffected>
		<bts>http://bugs.frugalware.org/task/4424</bts>
		<cve>http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2011-0987</cve>
		<desc>A security issue has been reported in phpMyAdmin, which can be exploited by malicious users to bypass certain security restrictions.
The security issue is caused due to an error within the handling of bookmarked SQL queries, which can be exploited to e.g. trick other users into executing unintended bookmarked SQL queries.
Successful exploitation requires that the bookmarks functionality is enabled and the configuration storage is set up and enabled.</desc>
	</fsa>
</fsas>
